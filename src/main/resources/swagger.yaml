openapi: 3.0.3
info:
  title: Rythmap API
  description: Written on Ktor by Danila Mityashin. Was influenced by Alexander Pervushin.
  version: 1.0.0
tags:
  - name: Account
    description: Account operations
  - name: Music
    description: Music operations

paths:
    /account/register:
        post:
          tags:
              - Account
          summary: Register new account
          operationId: registerAccount
          requestBody:
              required: true
              content:
                application/json:
                    schema:
                      $ref: '#/components/schemas/AccountRegisterRequest'
          responses:
              '200':
                description: Success
                content:
                    application/json:
                      schema:
                          $ref: '#/components/schemas/AccountAuthResponseSuccess'
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AccountAuthBadRequest'
              '409':
                description: Conflict
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AccountAuthConflict'

    /account/login:
        post:
          tags:
              - Account
          summary: Login to account
          operationId: loginAccount
          requestBody:
              required: true
              content:
                application/json:
                    schema:
                      $ref: '#/components/schemas/AccountLoginRequest'
          responses:
              '200':
                description: Success
                content:
                    application/json:
                      schema:
                          $ref: '#/components/schemas/AccountAuthResponseSuccess'
              '400':
                description: Bad request
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AccountAuthBadRequest'
              '401':
                description: Unauthorized
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AccountAuthUnauthorized'

    /account/info/public:
      get:
        tags:
          - Account
        summary: Get account public information
        operationId: getAccountPublicInfo
        parameters:
          - name: nickname
            in: query
            description: Account nickname
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountInfoPublicResponseSuccess'
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountInfoNotFound'
    /account/info/private:
      get:
        tags:
          - Account
        summary: Get account private information
        operationId: getAccountPrivateInfo
        parameters:
          - name: token
            in: query
            description: Account token
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountInfoPrivateResponseSuccess'
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountInfoNotFound'

    /account/delete:
        delete:
            tags:
              - Account
            summary: Delete account
            operationId: deleteAccount
            parameters:
              - name: login
                in: query
                description: Account login (email or username)
                required: true
                schema:
                  type: string
              - name: password
                in: query
                description: Account password
                required: true
                schema:
                  type: string
                  format: password
            responses:
                '200':
                    description: Success
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Account deleted

    /account/update/nickname:
        post:
            tags:
              - Account
            summary: Update account nickname
            operationId: updateNickname
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      token:
                        type: string
                      new_nickname:
                        type: string
            responses:
                '200':
                    description: Success
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Nickname changed

    /account/update/password:
        post:
            tags:
              - Account
            summary: Update account password
            operationId: updatePassword
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      nickname:
                        type: string
                      current_password:
                        type: string
                        format: password
                      new_password:
                        type: string
                        format: password
            responses:
                '200':
                    description: Success
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Password changed
    /account/update/info:
        post:
            tags:
              - Account
            summary: Update account information
            operationId: UpdateInfo
            requestBody:
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      token:
                        type: string
                      visible_name:
                        type: object
                        properties:
                          name:
                            type: string
                          surname:
                            type: string
                      music_preferences:
                        type: array
                        items:
                          type: string
                      other_preferences:
                        type: array
                        items:
                          type: string
                      about:
                        type: string
            responses:
                '200':
                    description: Success
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Account updated

    /music/yandex/track/get_and_save_current:
        get:
            tags:
              - Music
            summary: Get current track ID from Yandex Music and save it to Rythmap account
            operationId: getYandexCurrentTrack
            parameters:
              - name: yandexToken
                in: query
                description: Yandex Music account token
                required: true
                schema:
                  type: string
              - name: rythmapToken
                in: query
                description: Rythmap account token
                required: true
                schema:
                  type: string
            responses:
                '200':
                    description: Success
                    content:
                      application/json:
                        schema:
                          type: object

    /music/yandex/track/info:
        get:
            tags:
              - Music
            summary: Get track information from Yandex Music
            operationId: getYandexTrackInfo
            parameters:
              - name: trackID
                in: query
                description: Yandex Music track ID
                required: true
                schema:
                  type: string
            responses:
                '200':
                    description: Success
                    content:
                      application/json:
                        schema:
                          type: object

components:
    schemas:
      AccountRegisterRequest:
          required:
            - nickname
            - password
            - email
          type: object
          properties:
              nickname:
                type: string
              visible_name:
                type: object
                properties:
                  name:
                    type: string
                  surname:
                    type: string
              password:
                type: string
                format: password
              email:
                type: string
                format: email
              music_preferences:
                type: array
                items:
                  type: string
              other_preferences:
                type: array
                items:
                  type: string
              about:
                type: string
      AccountLoginRequest:
          type: object
          properties:
              login:
                type: string
              password:
                type: string
                format: password

      AccountAuthResponseSuccess:
        type: object
        properties:
          token:
            type: string
          token_type:
            type: string
            example: Bearer
      AccountAuthBadRequest:
        type: object
        properties:
          message:
            type: string
            example: Empty fields
      AccountAuthUnauthorized:
        type: object
        properties:
          message:
            type: string
            example: Invalid credentials
      AccountAuthConflict:
        type: object
        properties:
          message:
            type: string
            example: Account already exists

      AccountInfoPublicResponseSuccess:
          type: object
          properties:
            account_id:
              type: string
            nickname:
              type: string
            visible_name:
              type: object
              properties:
                  name:
                    type: string
                  surname:
                    type: string
            music_preferences:
                type: array
                items:
                    type: string
            other_preferences:
                type: array
                items:
                    type: string
            about:
              type: string
            created_at:
              type: string
              format: date-time
      AccountInfoPrivateResponseSuccess:
          type: object
          properties:
            account_id:
              type: string
            token:
              type: string
            nickname:
              type: string
            visible_name:
              type: object
              properties:
                  name:
                    type: string
                  surname:
                    type: string
            email:
              type: string
              format: email
            music_preferences:
                type: array
                items:
                    type: string
            other_preferences:
                type: array
                items:
                    type: string
            about:
              type: string
            created_at:
              type: string
              format: date-time
      AccountInfoNotFound:
          type: object
          properties:
            message:
              type: string
              example: Token or nickname not found